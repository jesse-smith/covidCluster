create_table(empdate_any, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
ggtext::GeomTextBox
ggtext::geom_textbox()
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
ggtext::geom_textbox()
devtools::load_all(".")
ggtext::geom_textbox()
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
?ggtext::geom_textbox
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
devtools::load_all(".")
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", legend_bottom = FALSE)
# Count employed at work during infectious period
completed %>%
filter(employment == "Employed") %>%
mutate(
empdate_any = across(starts_with("emp1date"), ~ !is.na(.x)) %>%
rowwise() %>%
transmute(lgl = sum(c_across(), na.rm = TRUE)) %>%
.[[1]]
) %>%
create_table(empdate_any, show_missing_levels = TRUE, infreq = FALSE) %>%
create_bar(title = "Days Worked While Infectious", x_lab = "Days", y_lab = "People")
class(dplyr::starts_with("bob"))
rlang::quo(dplyr::starts_with("bob")) %>% rlang::quo_is_symbol()
devtools::load_all(".")
rlang::quo(dplyr::starts_with("bob")) %>% rlang::quo_is_symbol()
iris %>% pivot_table(Sepal.Length)
iris %>% pivot_table(c(Sepal.Length, NA))
iris$Sepal.Length %>% pivot_table()
iris %>% dplyr::as_tibble() %>% is.data.frame()
iris$Sepal.Length %>% dplyr::as_tibble()
ggplot2::ggplot()
?ggplot2::ggplot()
?ggplot2::`ggplot2-package`
iris$Sepal.Length %>% fct_cut()
iris$Sepal.Length
iris$Sepal.Length %>% fct_cut(breaks = c(4,5,6))
iris$Sepal.Length %>% fct_cut(breaks = c(4,5,6), incl_lower = FALSE)
install.packages("waldo")
iris$Sepal.Length %>% fct_cut(breaks = c(4,5,6)) -> a
iris$Sepal.Length %>% fct_cut(breaks = c(4,5,6), incl_lower = FALSE) -> b
waldo::compare(a, b)
?waldo::compare(a, b)
iris$Sepal.Length %>% quantile(probs = seq(0, 1, by = 0.1))
iris$Sepal.Length %>% kmeans()
?kmeans
iris$Sepal.Length %>% kmeans(centers = 4)
iris$Sepal.Length %>% quantile()
devtools::load_all(".")
?magrittr::inset
?`[<-`
?gt
??gt
devtools::load_all(".")
?replace_if
??replace_if
?replace()
?append
1:10 %>% append(20)
1:10 %>% append(20, after = 0)
1:10 %>% append(20, after = 0L)
stringr::coll(c("{","]"))
?cut
any("bob" == c("bob", "BOB", "joe"))
any("bob" == c("bobr", "BOB", "joe"))
devtools::load_all(".")
b <- "bob"
b[[1]]
b[[2]]
try(b[[2]])
try(b[[2]], b[[1]])
tryCatch(b[[2]], finally = b[[1]])
tryCatch(b[[2]], b[[1]])
tryCatch(b[[2]], error = b[[1]])
?tryCatch
tryCatch(b[[2]], finally = b[[1]])
tryCatch(extract(b, 2), finally = b[[1]])
tryCatch(extract(b, 2), finally = extract(b, 1))
b <- "bob"
tryCatch(stop("hi"), finally = print("bye"))
tryCatch(b[[2]], finally = print(b[[1]]))
tryCatch(b[[2]], error = NA, finally = print(b[[1]]))
tryCatch(b[[2]], error = function(err) NULL, finally = print(b[[1]]))
tryCatch(b[[2]], error = function(err) b[[1]])
devtools::load_all(".")
devtools::check()
usethis::use_package("magrittr", min_version = TRUE)
usethis::use_package("ggplot2", min_version = TRUE)
usethis::use_package("dplyr", min_version = TRUE)
usethis::use_package("stringr", min_version = TRUE)
usethis::use_package("rlang", min_version = TRUE)
usethis::use_package("forcats", min_version = TRUE)
usethis::use_package("janitor", min_version = TRUE)
usethis::use_package("hutils", min_version = TRUE)
usethis::use_package("ggsci", min_version = TRUE)
usethis::use_package("ggthemes", min_version = TRUE)
usethis::use_package("ggtext", min_version = TRUE)
usethis::use_package("coviData", type = "Suggests", min_version = TRUE)
a <- barplot()
a <- barplot
waldo::compare(a, barplot)
waldo::compare(a, barplot) %>% print()
?waldo::compare
?dplyr::num_range
waldo(tidyselect::all_of, dplyr::all_of)
waldo::compare(tidyselect::all_of, dplyr::all_of)
requireNamespace("tidyselect")
c(dplyr::all_of, dplyr::any_of)
c(dplyr::all_of, dplyr::any_of) %>% is.list()
c(dplyr::all_of, dplyr::any_of) %>% purrr::map_lgl(~ is.function(.x))
?identical()
identical(dplyr::all_of, tidyselect::all_of)
devtools::load_all(".")
usethis::use_tidy_coc()
usethis::use_tidy_contributing()
usethis::use_tidy_description()
usethis::use_tidy_issue_template()
usethis::use_tidy_labels()
usethis::use_readme_md()
devtools::load_all(".")
devtools::check()
usethis::use_package("coviData", min_version = TRUE)
devtools::check()
?usethis::use_git_remote()
usethis::git_remote()
usethis::git_remotes()
devtools::load_all(".")
usethis::use_tidy_description()
usethis::use_logo("~/../Downloads/hex-covidCluster(1).png")
devtools::load_all(".")
usethis::use_tidy_coc()
usethis::use_tidy_contributing()
usethis::use_tidy_labels()
usethis::use_tidy_github_actions()
usethis::use_tidy_description()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_favicons()
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::preview_site()
library(tidyverse)
library(coviData)
library(covidCluster)
# Load data into R
download_integrated_data()
data <- load_integrated_data() %>% preprocess()
# Filter to completed records based on age heuristic
data %>%
filter(!is.na(age)) ->
completed
devtools::load_all(".")
devtools::check()
devtools::load_all(".")
usethis::use_package("purrr", min_version = TRUE)
usethis::use_package("tidyr", min_version = TRUE)
devtools::load_all(".")
usethis::use_testthat()
usethis::use_test(name = "Creating Tables")
usethis::use_test()
iris %>% as_tibble() %>% typeof()
devtools::load_all(".")
create_table(iris, Sepal.Width)
devtools::load_all(".")
devtools::test()
devtools::load_all(".")
library(covidCluster)
library(tidyverse)
library(coviData)
library(covidCluster)
# Load data into R
data <- load_integrated_data() %>% preprocess()
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
# Filter to completed records based on age heuristic
data %>%
filter(
!is.na(prevexposure),
specimendate>=Sys.Date()-30
) ->
completed
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_"))
create_table(starts_with("school_activity_type_"))
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
devtools::load_all(".")
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
# Count other occupations
completed %>%
filter(employment != "Unemployed",!is.na(occupation_8)) %>%
create_table(starts_with("occuother_"))
# Load data into R
data <- load_integrated_data()
# Filter to completed records based on age heuristic
data %>%
filter(
!is.na(prevexposure),
specimendate>=Sys.Date()-30
) ->
completed
# Count types of activity
completed %>%
filter(student == "Yes", school_activity_mode != "Virtual") %>%
select(-starts_with("school_activity_type_2_")) %>%
create_table(starts_with("school_activity_type_"))
